<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="csc366.jpademo.Demo0" tests="7" skipped="0" failures="0" errors="0" timestamp="2020-03-04T05:14:04" hostname="caoimhes-MacBook-Pro.local" time="0.706">
  <properties/>
  <testcase name="testSavePerson()" classname="csc366.jpademo.Demo0" time="0.375"/>
  <testcase name="testGetPerson()" classname="csc366.jpademo.Demo0" time="0.032"/>
  <testcase name="testDeletePerson()" classname="csc366.jpademo.Demo0" time="0.067"/>
  <testcase name="testFindAllPersons()" classname="csc366.jpademo.Demo0" time="0.027"/>
  <testcase name="testDeletByPersonId()" classname="csc366.jpademo.Demo0" time="0.033"/>
  <testcase name="testJpqlFinder()" classname="csc366.jpademo.Demo0" time="0.083"/>
  <testcase name="testSqlFinder()" classname="csc366.jpademo.Demo0" time="0.063"/>
  <system-out><![CDATA[21:13:56.576 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
21:13:56.596 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
21:13:56.656 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [csc366.jpademo.Demo0] from class [org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper]
21:13:56.702 [Test worker] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [csc366.jpademo.Demo0], using SpringBootContextLoader
21:13:56.707 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [csc366.jpademo.Demo0]: class path resource [csc366/jpademo/Demo0-context.xml] does not exist
21:13:56.708 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [csc366.jpademo.Demo0]: class path resource [csc366/jpademo/Demo0Context.groovy] does not exist
21:13:56.709 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [csc366.jpademo.Demo0]: no resource found for suffixes {-context.xml, Context.groovy}.
21:13:56.712 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [csc366.jpademo.Demo0]: Demo0 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
21:13:56.833 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [csc366.jpademo.Demo0]
21:13:57.046 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/Users/caoimhe/Desktop/366finalproj/build/classes/java/main/csc366/jpademo/JpaDemoApplication.class]
21:13:57.050 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration csc366.jpademo.JpaDemoApplication for test class csc366.jpademo.Demo0
21:13:57.059 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - @TestExecutionListeners is not present for class [csc366.jpademo.Demo0]: using defaults.
21:13:57.060 [Test worker] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
21:13:57.094 [Test worker] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@65976c33, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3d46d208, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@507ebd32, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1c19d813, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4231d957, org.springframework.test.context.transaction.TransactionalTestExecutionListener@49ec858b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6cde26a9, org.springframework.test.context.event.EventPublishingTestExecutionListener@3ed5b261, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@72623f8d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5f0f3c97, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4279b2b1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@512c5625, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@325185da]
21:13:57.101 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@1da2537d testClass = Demo0, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2a85bdd2 testClass = Demo0, locations = '{}', classes = '{class csc366.jpademo.JpaDemoApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{spring.main.banner-mode=off, spring.jpa.hibernate.ddl-auto=update, logging.level.root=ERROR, logging.level.csc366=DEBUG, logging.level.org.hibernate.SQL=DEBUG, logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE, spring.jpa.properties.hibernate.format_sql=true, spring.jpa.show-sql=false, spring.jpa.properties.hibernate.show_sql=false, logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n, org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1cc4700e, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@57bcd110, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1274545e, [ImportsContextCustomizer@7e7e2c7c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1d312937, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5d549be, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
21:13:57.141 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@1da2537d testClass = Demo0, testInstance = csc366.jpademo.Demo0@57ec838e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2a85bdd2 testClass = Demo0, locations = '{}', classes = '{class csc366.jpademo.JpaDemoApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{spring.main.banner-mode=off, spring.jpa.hibernate.ddl-auto=update, logging.level.root=ERROR, logging.level.csc366=DEBUG, logging.level.org.hibernate.SQL=DEBUG, logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE, spring.jpa.properties.hibernate.format_sql=true, spring.jpa.show-sql=false, spring.jpa.properties.hibernate.show_sql=false, logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n, org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1cc4700e, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@57bcd110, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1274545e, [ImportsContextCustomizer@7e7e2c7c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1d312937, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5d549be, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]].
21:13:57.360 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, spring.main.banner-mode=off, spring.jpa.hibernate.ddl-auto=update, logging.level.root=ERROR, logging.level.csc366=DEBUG, logging.level.org.hibernate.SQL=DEBUG, logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE, spring.jpa.properties.hibernate.format_sql=true, spring.jpa.show-sql=false, spring.jpa.properties.hibernate.show_sql=false, logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n, org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true, server.port=-1}
2020-03-03 21:13:58 - Starting Demo0 on caoimhes-MacBook-Pro.local with PID 26428 (started by caoimhe in /Users/caoimhe/Desktop/366finalproj)
2020-03-03 21:13:58 - Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-03-03 21:13:58 - No active profile set, falling back to default profiles: default
2020-03-03 21:14:03 - 
    
    create table address (
       id bigint generated by default as identity,
        city varchar(255),
        state varchar(255),
        street varchar(255),
        zip_code varchar(255),
        person_id bigint,
        primary key (id)
    )
2020-03-03 21:14:03 - 
    
    create table customer (
       c_id bigint generated by default as identity,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        primary key (c_id)
    )
2020-03-03 21:14:03 - 
    
    create table employee (
       empl_id bigint generated by default as identity,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        start_date timestamp not null,
        primary key (empl_id)
    )
2020-03-03 21:14:03 - 
    
    create table payment_method (
       c_id bigint not null,
        card_number double not null,
        card_type varchar(255) not null,
        is_cash boolean not null,
        customer_c_id bigint not null,
        primary key (c_id)
    )
2020-03-03 21:14:03 - 
    
    create table payroll (
       empl_id bigint not null,
        pay_period varchar(255) not null,
        pay_rate double not null,
        employee_empl_id bigint not null,
        primary key (empl_id)
    )
2020-03-03 21:14:03 - 
    
    create table person (
       id bigint generated by default as identity,
        email varchar(255),
        first_name varchar(255),
        last_name varchar(255) not null,
        primary key (id)
    )
2020-03-03 21:14:03 - 
    
    alter table person 
       drop constraint if exists UK6wjuvbalf4x2thqkfxejnlbvh
2020-03-03 21:14:03 - 
    
    alter table person 
       add constraint UK6wjuvbalf4x2thqkfxejnlbvh unique (last_name, first_name)
2020-03-03 21:14:03 - 
    
    alter table person 
       drop constraint if exists UK_fwmwi44u55bo4rvwsv0cln012
2020-03-03 21:14:03 - 
    
    alter table person 
       add constraint UK_fwmwi44u55bo4rvwsv0cln012 unique (email)
2020-03-03 21:14:03 - 
    
    alter table person 
       drop constraint if exists UK_6atyavdanbj9pwrbrod7irb2x
2020-03-03 21:14:03 - 
    
    alter table person 
       add constraint UK_6atyavdanbj9pwrbrod7irb2x unique (last_name)
2020-03-03 21:14:03 - 
    
    alter table address 
       add constraint FK81ihijcn1kdfwffke0c0sjqeb 
       foreign key (person_id) 
       references person
2020-03-03 21:14:03 - 
    
    alter table payment_method 
       add constraint FK4hs7iidum1ppamsdrq4jqaala 
       foreign key (customer_c_id) 
       references customer
2020-03-03 21:14:03 - 
    
    alter table payroll 
       add constraint FKho65wd7dl0mmb6gjxio18re71 
       foreign key (employee_empl_id) 
       references employee
2020-03-03 21:14:04 - Started Demo0 in 7.432 seconds (JVM running for 10.329)
2020-03-03 21:14:05 - 
    insert 
    into
        person
        (id, email, first_name, last_name) 
    values
        (null, ?, ?, ?)
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test@calpoly.edu]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [3] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    select
        person0_.id as id1_5_,
        person0_.email as email2_5_,
        person0_.first_name as first_na3_5_,
        person0_.last_name as last_nam4_5_ 
    from
        person person0_ 
    where
        person0_.first_name=?
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test]
2020-03-03 21:14:05 - Person[1,test,test,addresses=[]]
2020-03-03 21:14:05 - 
    insert 
    into
        person
        (id, email, first_name, last_name) 
    values
        (null, ?, ?, ?)
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test@calpoly.edu]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [3] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    select
        person0_.id as id1_5_,
        person0_.email as email2_5_,
        person0_.first_name as first_na3_5_,
        person0_.last_name as last_nam4_5_ 
    from
        person person0_ 
    where
        person0_.first_name=?
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    insert 
    into
        person
        (id, email, first_name, last_name) 
    values
        (null, ?, ?, ?)
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test@calpoly.edu]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [3] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    delete 
    from
        person 
    where
        id=?
2020-03-03 21:14:05 - binding parameter [1] as [BIGINT] - [3]
2020-03-03 21:14:05 - 
    insert 
    into
        person
        (id, email, first_name, last_name) 
    values
        (null, ?, ?, ?)
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test@calpoly.edu]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [3] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    select
        person0_.id as id1_5_,
        person0_.email as email2_5_,
        person0_.first_name as first_na3_5_,
        person0_.last_name as last_nam4_5_ 
    from
        person person0_
2020-03-03 21:14:05 - 
    insert 
    into
        person
        (id, email, first_name, last_name) 
    values
        (null, ?, ?, ?)
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test@calpoly.edu]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [3] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    select
        person0_.id as id1_5_,
        person0_.email as email2_5_,
        person0_.first_name as first_na3_5_,
        person0_.last_name as last_nam4_5_ 
    from
        person person0_ 
    where
        person0_.first_name=?
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    delete 
    from
        person 
    where
        id=?
2020-03-03 21:14:05 - binding parameter [1] as [BIGINT] - [5]
2020-03-03 21:14:05 - 
    insert 
    into
        person
        (id, email, first_name, last_name) 
    values
        (null, ?, ?, ?)
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test@calpoly.edu]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [3] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    select
        person0_.id as id1_5_,
        person0_.email as email2_5_,
        person0_.first_name as first_na3_5_,
        person0_.last_name as last_nam4_5_ 
    from
        person person0_ 
    where
        person0_.first_name=? 
        or person0_.last_name=?
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    insert 
    into
        person
        (id, email, first_name, last_name) 
    values
        (null, ?, ?, ?)
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test@calpoly.edu]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [3] as [VARCHAR] - [test]
2020-03-03 21:14:05 - 
    select
        * 
    from
        person as p 
    where
        p.first_name = ? 
        or p.last_name = ?
2020-03-03 21:14:05 - binding parameter [1] as [VARCHAR] - [test]
2020-03-03 21:14:05 - binding parameter [2] as [VARCHAR] - [test]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
